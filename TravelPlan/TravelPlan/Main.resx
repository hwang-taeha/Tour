<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnFestival.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        7qV/o2uUAAAAAElFTkSuQmCC
</value>
  </data>
</root>